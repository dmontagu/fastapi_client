from datetime import datetime
from typing import Optional, List, Dict
from typing import Any  # noqa
from typing_extensions import Literal
from uuid import UUID
from pydantic import BaseModel, Field

{{#models}}
{{#model}}
class {{classname}}(BaseModel):
{{#vars}}
{{#isEnum}}
    {{name}}: "Literal[{{#allowableValues}}{{#values}}'{{{this}}}'{{^-last}}, {{/-last}}{{/values}}{{/allowableValues}}]" = Field({{#required}}...{{/required}}{{^required}}None{{/required}}, alias="{{baseName}}")
{{/isEnum}}
{{^isEnum}}
    {{name}}: "{{^required}}Optional[{{/required}}{{>_dataTypeModel}}{{^required}}]{{/required}}" = Field({{#required}}...{{/required}}{{^required}}None{{/required}}, alias="{{baseName}}")
{{/isEnum}}
{{/vars}}
{{/model}}
{{/models}}
